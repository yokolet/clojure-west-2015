(page "clojure-west.html"
  (:require [hoplon.reveal :refer [slideshow chapter slide notes highlight quicklist bullet]]
            [hoplon.util :as u]
            [hoplon.datamodel :as d]
            [tailrecursion.hoplon.reload :as r]))

(r/reload-all)

(defn chapter-intro []
  (chapter :title ""
           (slide :title (h2 "The Joys and Pains to Write a Clojure Curriculum for Beginners")
                  (br)
                  (br)
                  (bullet (h3 :class "purple" "Yoko Harada"))
                  (bullet (h3 :class "purple" "@yokolet"))
                  (bullet (h3 :class "ashgray" "Clojure/West 2015")))

           (slide :title "Who is Yoko?"
                  (br)
                  (ul
                   (li :class "fragment" :data-fragment-index "1"
                       (h3 "Developer at Cognitect, Inc.")
                       (bullet (h3 (a :target "_blank" :href "http://cognitect.com/" "http://cognitect.com/"))))
                   (li :class "fragment" :data-fragment-index "2"
                       (h3 "The First ClojureBridge TA"))
                   (li :class "fragment" :data-fragment-index "3"
                       (h3 "ClojureBridge Board Member"))
                   (li :class "fragment" :data-fragment-index "4"
                       (h3 "RailsGirls origanizer/RailsBridge TA"))
                   (li :class "fragment" :data-fragment-index "5"
                       (h3 :class "purple" "@yokolet"))))

           (slide :title "Look around..."
                  (h4 :class "slateblue" "How many percent of attendees are female?")
                  )

           (slide :title "That's Why ClojureBridge"
                  (bullet (h4 (a :target "_blank" :href "http://clojurebridge.org/" "http://clojurebridge.org/")))
                  (bullet "Free, beginner-friendly Clojure workshops for women")
                  (bullet "To make this Clojure community diverse")
                  (img :src "img/clojurebridgedotorg.png" :style "border:0px")
                  )

           (slide :title "Past ClojureBridge Workshops"
                  (u/workshop-list u/workshops))

           (slide :title "Future ClojureBridge Workshops"
                  (u/workshop-list u/planned-workshops))

           (slide :title "Local Community Event"
                  (ul
                   (li "Local Clojure communities origanize it")
                   (li "ClojureBridge (NPO) supports organizers"
                       (ul
                        (li "mentoring")
                        (li "financial support (Bridge Foundry)")
                        (li "event page")
                        ))
                   )
                  )

           (slide :title "Like RailsBridge"
                  (ul
                   (li "Two-day workshop"
                       (ul
                        (li "Friday - Installation")
                        (li "Saturday - Basics and App, After Party")
                        )))
                  )

           (slide :title "ClojureBridge Original Curriculum"
                  (h4 :class "gray" "Like RailsBridge (plus bit more)")
                  (dl
                   (dt :class "fragment" :data-fragment-index "1"
                       (bullet "A lot of slides for basic stuff"))
                   (dt :class "fragment" :data-fragment-index "2"
                       (bullet "A lot of exercises"))
                   (dt :class "fragment" :data-fragment-index "3"
                       (bullet "Capstone app which hits API"))
                   (dt :class "fragment" :data-fragment-index "4"
                       (bullet "Web app version of capstone app"))
                   (dt :class "fragment" :data-fragment-index "5"
                       (bullet "Catalog-ish community-docs"))
                   (dt :class "fragment" :data-fragment-index "6"
                       (br)
                       (h4 :class "maroon" "PERFECT! Durham team was so happy."))
                   )                  
                  )

           (slide :title "At Durham Chapter"
                  (bullet "active, motivated and enjoying coding at first")
                  (img :src "img/workshop.png" :style "border:0px")
                  )

           (slide :title "Unfortunately..."
                  (bullet "She was not a programmer")
                  (bullet "She was at least not a Clojure programmer")
                  (bullet "Her experiences were mostly HTML or CSS")
                  (br)
                  (h4 :class "slateblue" "What if she had to learn the entire curriculum in a day?")
                  )
           
           (slide :title "How It Went"
                  (dl
                   (dt :class "fragment" :data-fragment-index "1"
                       (img :src "img/smiles.png" :style "border:0px"))
                   (dt :class "fragment" :data-fragment-index "2"
                       (img :src "img/confused.png" :style "border:0px"))
                   (dt :class "fragment" :data-fragment-index "3"
                       (img :src "img/tired.png" :style "border:0px"))
                   )
                  )

           (slide :title "Sometimes Attendees Expressed"
                  (dl
                   (dt :class "fragment" :data-fragment-index "1"
                       (h3 :class "bluekoi" "\"Dropped from an airplane\""))
                   (dt :class "fragment" :data-fragment-index "2"
                       (h3 :class "blue" "\"Tears in my eyes\""))
                   )                  
                  )

           (slide :title "Turned Out Curriculum Didn't Fit"
                  (bullet "Not attendees' fault")
                  (bullet "Not instructors' fault")
                  (bullet "Not Clojure's fault")
                  (br)
                  (h4 :class "gray" "The team was inexperienced...")
                  )

           (slide :title "Must Change Curriculum!")

           )
  )

(defn chapter-quil []
  (chapter :title "The Road to a Perfect Curriculum"
           (slide :title "At Cognation, August 2014"
                  (h4 "Two Sessions")
                  (ul
                   (li "ClojureBridge Hackfest")
                   (li "ClojureBridge Hacking"))
                  (br)
                  (br)
                  (h4 :class "maroon" "\"Making this Clojure community diverse is our mission!\"")
                  )

           (slide :title "The Birth of a Drawing App"
                  (dl
                   (dt :class "fragment" :data-fragment-index "1"
                       (div :style "vertical-align:top;"
                            (img :src "img/alexm_and_quil.png" :style "border:0px")
                            "Alex Miller - Quil is good"))
                   (dt :class "fragment" :data-fragment-index "2"
                       (div :style "vertical-align:top;"
                            (img :src "img/russ_and_verysimple.png" :style "border:0px")
                            "Russ Olson - Start from very simple"))
                   (dt :class "fragment" :data-fragment-index "3"
                       (h3 :class "maroon" "Let's do it!")))
                  )

           (slide :title "The Very Simple Quil App"
                  (div :class "code" (highlight :class "clojure"
                                 ;;{{
                                 (ns drawing.lines
                                   (:require [quil.core :as q]))
                                 (defn setup []
                                   (q/frame-rate 30)
                                   (q/color-mode :rgb)
                                   (q/stroke 255 0 0))
                                 (defn draw []
                                   (q/line 0 0 (q/mouse-x) (q/mouse-y))
                                   (q/line 200 0 (q/mouse-x) (q/mouse-y))
                                   (q/line 0 200 (q/mouse-x) (q/mouse-y))
                                   (q/line 200 200 (q/mouse-x) (q/mouse-y)))
                                 (q/defsketch hello-lines
                                   :title "You can see lines"
                                   :size [500 500]
                                   :setup setup
                                   :draw draw)
                                 ;;}}
                                 ))
                  )

           (slide :title "The Very Simple Quil App is.."
                  (canvas :id "drawing")
                  )

           (slide :title "Got a Contribution to the Quil App"
                  (bullet "\"Add mouse-color function to set color of line based on mouse coordinates. Thanks @alandipert\"")
                  (div :class "code"
                       (highlight :class "clojure"
                                  ;;{{
                                  (defn mouse-color [x y]
                                    "Calculate a color based on two values"
                                    [(mod x 255)  (mod y 255) 0])

                                  (defn draw []
                                    (apply q/stroke  (mouse-color (q/mouse-x) (q/mouse-y)))
                                    .....
                                    )
                                 ;;}}
                                 ))
                  )

           (slide :title "The Very Simple Quil App Turns Into..."
                  (canvas :id "colorful")
                  )

           (slide :title "Report From San Francisco"
                  (dl
                   (dt :class "fragment" :data-fragment-index "1"
                       (h4 :class "maroon" "\"Energized by the strikingly different output\""))
                   (dt :class "fragment" :data-fragment-index "2"
                       (h4 :class "darkorchid" "\"Could modify their programs and compare the results\""))
                   (dt :class "fragment" :data-fragment-index "3"
                       (h3 :class "maroon" "\"This was fun\""))
                   )
                  )

           (slide :title "Yes! Quil App is a Win"
                  (bullet "It is a game changer!")
                  (br)
                  (div
                   (button :on-click #(reset! d/faces "tired") :class "btn btn-large" "Before")
                   (button :on-click #(reset! d/faces "fun") :class "btn btn-large" "After")
                   (br)
                   (div (img :src d/picture-url :style "border:0px;"))
                   )
                  )

           (slide :title "Then... Another Problem"
                  (ul
                   (li "Big gap between basic stuff and Quil app")
                   (li "No function learned in the morning session")
                   (li "more, more and MOAR"))
                  )
           )
  )

(defn chapter-activity []
  (chapter :title "ClojureBridge Curriculum Team's Efforts"
           (slide :title "Improving Existing Curriculum"
                  (h4 :class "gray" "for example...")
                  (ul
                   (li :class "fragment" :data-fragment-index "1"
                       (h4 :class "slateblue" "Incorporate Quil throughout the entire curriculum #115" (br)
                           (a :target "_blank" :href "https://github.com/ClojureBridge/curriculum/issues/115" "https://github.com/ClojureBridge/curriculum/issues/115")))
                   (li :class "fragment" :data-fragment-index "2"
                       (h4 :class "slateblue" "Remove expectations from curriculum #140" (br)
                           (a :target "_blank" :href "https://github.com/ClojureBridge/curriculum/issues/140" "https://github.com/ClojureBridge/curriculum/issues/140")
                           ))
                   (li :class "fragment" :data-fragment-index "3"
                       (h4 :class "maroon" "more, more and MOAR" (br)
                           (a :target "_blank" :href "https://github.com/ClojureBridge/curriculum/issues" "https://github.com/ClojureBridge/curriculum/issues")))
                   )
                  )

           (slide :title "Efforts Done So Far"
                  (img :src "img/clojurebridge-commits-with-anno.png" :style "border:0px;") (br)
                  (img :src "img/drawing-commits-with-anno.png" :style "border:0px;")
                  )

           (slide :title "Ongoing and Planned Enhancement"
                  (ul
                   (li :class "fragment" :data-fragment-index "1"
                       (h4 :class "gray" "Curriculum for advanced attendees")
                       (bullet "Big differences:")
                       (bullet "* She is not a programmer.")
                       (bullet "* She is not a Clojure programmer.")
                       (br))
                   (li :class "fragment" :data-fragment-index "2"
                       (h4 :class "gray" "After workshop support material")
                       (bullet "Just a one-day workshop is not enough")))
                  )
           ))

(defn chapter-conclusion []
  (chapter :title "Conclusion"
           (slide :title "Make This Clojure Community Diverse!")
           (slide :title "On the Way to Improving the Curriculum"
                  (h4 :class "gray" "So that everyone from different background can enjoy")
                  (h4 :class "gray" "So that attendees can keep studying"))
           (slide :title "Help ClojureBridge"
                  (h4 :class "gray" "Go to...")
                  (ul
                   (li (a :target "_blank" :href "http://github.com/ClojureBridge/curriculum/" "http://github.com/ClojureBridge/curriculum/"))
                   (li (a :target "_blank" :href "http://github.com/ClojureBridge/drawing/" "http://github.com/ClojureBridge/drawing/"))
                   (li (a :target "_blank" :href "http://clojurebridge.github.io/community-docs/" "http://clojurebridge.github.io/community-docs/")))
                  )
           (slide :title "Shout You'll Organize ClojureBridge"
                  (h4 :class "gray" "Go to...")
                  (ul
                   (li (a :target "_blank" :href "http://www.clojurebridge.org/#get-involved" "http://www.clojurebridge.org/#get-involved"))
                   (li (a :target "_blank" :href "http://groups.google.com/forum/#!forum/clojurebridge-workshops" "http://groups.google.com/forum/#!forum/clojurebridge-workshops")))
                  )
           (slide :title "You are the Next ClojureBridge Organizer!")
           (slide :title (h4 "Many Thanks to ClojureBridge Sponsors")
                  (img :src "img/sponsor-list.png" :style "border:0px")
                  )
           (slide :title "Thank You!")
           )
  )

(html
  (head)
  (body
    (slideshow :theme "serif"
               (chapter-intro)
               (chapter-quil)
               (chapter-activity)
               (chapter-conclusion)
               )))
